#!/bin/bash

# -------------------------------------------------------------------
# paths
#
# This file sets up the PATH environment variable. For Darwin-based
# systems, i.e., macOS, it resets PATH and then uses path_helper to
# re-establish it, before adding user specific paths.
#
# -------------------------------------------------------------------

# -------------------------------------------------------------------
# Reset Path Helper
# test kernel to prevent reset on Linux
# -------------------------------------------------------------------
if [[ "myos" == "Darwin" ]]; then
  PATH=""
  if [ -x /usr/libexec/path_helper ]; then
    eval `/usr/libexec/path_helper -s`
  fi
fi

# -------------------------------------------------------------------
# Add user specific paths to PATH environment variable
# -------------------------------------------------------------------

# set PATH so it includes user's private bin directories, if they exist
if [ -d ${HOME}/bin ] ; then PATH="${PATH}:${HOME}/bin" ; fi
if [ -d ${HOME}/bin/bash ] ; then PATH="${PATH}:${HOME}/bin/bash" ; fi
if [ -d ${HOME}/bin/ruby ] ; then PATH="${PATH}:${HOME}/bin/ruby" ; fi
if [ -d ${HOME}/bin/python ] ; then PATH="${PATH}:${HOME}/bin/python" ; fi
if [ -d ${HOME}/bin/perl ] ; then PATH="${PATH}:${HOME}/bin/perl" ; fi

# Set PATH so it includes /opt/homebrew/bin if it exists
if [ -d /opt/homebrew/bin ] ; then PATH="/opt/homebrew/bin:${PATH}" ; fi

# Set PATH so it includes /opt/homebrew/sbin if it exists
if [ -d /opt/homebrew/sbin  ] ; then PATH="/opt/homebrew/sbin:${PATH}" ; fi

# Set path to include GNU binaries that were installed via Homebrew
# GNUBINS="$(find /opt/homebrew/Cellar -type d -follow -name gnubin -print)"
# for bindir in ${GNUBINS[@]}; do
#   export PATH=$bindir:$PATH;
# done;

# set PATH so it includes /usr/local/sbin if it exists
if [ -d /usr/local/sbin ] ; then PATH="${PATH}:/usr/local/sbin" ; fi

# add Go path for Darwin
if [ -e /usr/local/go ] ; then
  PATH="${PATH}:/usr/local/go/bin"
  PATH="${PATH}:${HOME}/code/golib/bin"
fi

# dd Go path for Linux
if [ -e /usr/bin/go ] ; then
  PATH="${PATH}:/usr/bin/go"
  PATH="${PATH}:${HOME}/code/golib/bin"
fi

# add protobuf path, if it exists
if [ -d /usr/local/protobuf/bin ] ; then PATH="${PATH}:/usr/local/protobuf/bin" ; fi

# add Rust path
if [ -e $HOME/.cargo/bin/bin ]; then
  PATH="${PATH}:${HOME}/.cargo/bin/bin"
fi

# Enable path to pip - AWS CLI needs this
if [ -d ~/.local/bin ] ; then
  PATH="~/.local/bin:${PATH}"
fi

# Add path to Python3 scripts (needed for AWS CLI)
# if [ -d ${HOME}/Library/Python/3.7/bin ] ; then
#   PATH="${PATH}:${HOME}/Library/Python/3.7/bin"
# fi

# Add path to ~/.local/bin for aws cli on linux
if [ -d ${HOME}/.local/bin ] ; then PATH="${HOME}/.local/bin:${PATH}" ; fi


# Sourcegraph
if [ -d /usr/local/opt/postgresql/bin ] ; then
  PATH="/usr/local/opt/postgresql/bin:$PATH"
fi

export PATH

# Be incredible anal and remove duplicates from PATH, even though the
# shell will only use the first occurrance.
# https://www.linuxjournal.com/content/removing-duplicate-path-entries
PATH=$(echo $PATH | awk -v RS=: '!($0 in a) {a[$0]; printf("%s%s", length(a) > 1 ? ":" : "", $0)}')

export PATH
